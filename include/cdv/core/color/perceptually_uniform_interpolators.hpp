#pragma once

#include <cdv/core/color/interpolator.hpp>

namespace cdv::interpolator
{
    constexpr auto viridis = detail::color_interpolator(std::array{
        0x440154ffu, 0x440256ffu, 0x450457ffu, 0x450559ffu, 0x46075affu, 0x46085cffu, 0x460a5dffu, 0x460b5effu,
        0x470d60ffu, 0x470e61ffu, 0x471063ffu, 0x471164ffu, 0x471365ffu, 0x481467ffu, 0x481668ffu, 0x481769ffu,
        0x48186affu, 0x481a6cffu, 0x481b6dffu, 0x481c6effu, 0x481d6fffu, 0x481f70ffu, 0x482071ffu, 0x482173ffu,
        0x482374ffu, 0x482475ffu, 0x482576ffu, 0x482677ffu, 0x482878ffu, 0x482979ffu, 0x472a7affu, 0x472c7affu,
        0x472d7bffu, 0x472e7cffu, 0x472f7dffu, 0x46307effu, 0x46327effu, 0x46337fffu, 0x463480ffu, 0x453581ffu,
        0x453781ffu, 0x453882ffu, 0x443983ffu, 0x443a83ffu, 0x443b84ffu, 0x433d84ffu, 0x433e85ffu, 0x423f85ffu,
        0x424086ffu, 0x424186ffu, 0x414287ffu, 0x414487ffu, 0x404588ffu, 0x404688ffu, 0x3f4788ffu, 0x3f4889ffu,
        0x3e4989ffu, 0x3e4a89ffu, 0x3e4c8affu, 0x3d4d8affu, 0x3d4e8affu, 0x3c4f8affu, 0x3c508bffu, 0x3b518bffu,
        0x3b528bffu, 0x3a538bffu, 0x3a548cffu, 0x39558cffu, 0x39568cffu, 0x38588cffu, 0x38598cffu, 0x375a8cffu,
        0x375b8dffu, 0x365c8dffu, 0x365d8dffu, 0x355e8dffu, 0x355f8dffu, 0x34608dffu, 0x34618dffu, 0x33628dffu,
        0x33638dffu, 0x32648effu, 0x32658effu, 0x31668effu, 0x31678effu, 0x31688effu, 0x30698effu, 0x306a8effu,
        0x2f6b8effu, 0x2f6c8effu, 0x2e6d8effu, 0x2e6e8effu, 0x2e6f8effu, 0x2d708effu, 0x2d718effu, 0x2c718effu,
        0x2c728effu, 0x2c738effu, 0x2b748effu, 0x2b758effu, 0x2a768effu, 0x2a778effu, 0x2a788effu, 0x29798effu,
        0x297a8effu, 0x297b8effu, 0x287c8effu, 0x287d8effu, 0x277e8effu, 0x277f8effu, 0x27808effu, 0x26818effu,
        0x26828effu, 0x26828effu, 0x25838effu, 0x25848effu, 0x25858effu, 0x24868effu, 0x24878effu, 0x23888effu,
        0x23898effu, 0x238a8dffu, 0x228b8dffu, 0x228c8dffu, 0x228d8dffu, 0x218e8dffu, 0x218f8dffu, 0x21908dffu,
        0x21918cffu, 0x20928cffu, 0x20928cffu, 0x20938cffu, 0x1f948cffu, 0x1f958bffu, 0x1f968bffu, 0x1f978bffu,
        0x1f988bffu, 0x1f998affu, 0x1f9a8affu, 0x1e9b8affu, 0x1e9c89ffu, 0x1e9d89ffu, 0x1f9e89ffu, 0x1f9f88ffu,
        0x1fa088ffu, 0x1fa188ffu, 0x1fa187ffu, 0x1fa287ffu, 0x20a386ffu, 0x20a486ffu, 0x21a585ffu, 0x21a685ffu,
        0x22a785ffu, 0x22a884ffu, 0x23a983ffu, 0x24aa83ffu, 0x25ab82ffu, 0x25ac82ffu, 0x26ad81ffu, 0x27ad81ffu,
        0x28ae80ffu, 0x29af7fffu, 0x2ab07fffu, 0x2cb17effu, 0x2db27dffu, 0x2eb37cffu, 0x2fb47cffu, 0x31b57bffu,
        0x32b67affu, 0x34b679ffu, 0x35b779ffu, 0x37b878ffu, 0x38b977ffu, 0x3aba76ffu, 0x3bbb75ffu, 0x3dbc74ffu,
        0x3fbc73ffu, 0x40bd72ffu, 0x42be71ffu, 0x44bf70ffu, 0x46c06fffu, 0x48c16effu, 0x4ac16dffu, 0x4cc26cffu,
        0x4ec36bffu, 0x50c46affu, 0x52c569ffu, 0x54c568ffu, 0x56c667ffu, 0x58c765ffu, 0x5ac864ffu, 0x5cc863ffu,
        0x5ec962ffu, 0x60ca60ffu, 0x63cb5fffu, 0x65cb5effu, 0x67cc5cffu, 0x69cd5bffu, 0x6ccd5affu, 0x6ece58ffu,
        0x70cf57ffu, 0x73d056ffu, 0x75d054ffu, 0x77d153ffu, 0x7ad151ffu, 0x7cd250ffu, 0x7fd34effu, 0x81d34dffu,
        0x84d44bffu, 0x86d549ffu, 0x89d548ffu, 0x8bd646ffu, 0x8ed645ffu, 0x90d743ffu, 0x93d741ffu, 0x95d840ffu,
        0x98d83effu, 0x9bd93cffu, 0x9dd93bffu, 0xa0da39ffu, 0xa2da37ffu, 0xa5db36ffu, 0xa8db34ffu, 0xaadc32ffu,
        0xaddc30ffu, 0xb0dd2fffu, 0xb2dd2dffu, 0xb5de2bffu, 0xb8de29ffu, 0xbade28ffu, 0xbddf26ffu, 0xc0df25ffu,
        0xc2df23ffu, 0xc5e021ffu, 0xc8e020ffu, 0xcae11fffu, 0xcde11dffu, 0xd0e11cffu, 0xd2e21bffu, 0xd5e21affu,
        0xd8e219ffu, 0xdae319ffu, 0xdde318ffu, 0xdfe318ffu, 0xe2e418ffu, 0xe5e419ffu, 0xe7e419ffu, 0xeae51affu,
        0xece51bffu, 0xefe51cffu, 0xf1e51dffu, 0xf4e61effu, 0xf6e620ffu, 0xf8e621ffu, 0xfbe723ffu, 0xfde725ffu,
    });

    constexpr auto inferno = detail::color_interpolator(std::array{
        0x000004ffu, 0x010005ffu, 0x010106ffu, 0x010108ffu, 0x02010affu, 0x02020cffu, 0x02020effu, 0x030210ffu,
        0x040312ffu, 0x040314ffu, 0x050417ffu, 0x060419ffu, 0x07051bffu, 0x08051dffu, 0x09061fffu, 0x0a0722ffu,
        0x0b0724ffu, 0x0c0826ffu, 0x0d0829ffu, 0x0e092bffu, 0x10092dffu, 0x110a30ffu, 0x120a32ffu, 0x140b34ffu,
        0x150b37ffu, 0x160b39ffu, 0x180c3cffu, 0x190c3effu, 0x1b0c41ffu, 0x1c0c43ffu, 0x1e0c45ffu, 0x1f0c48ffu,
        0x210c4affu, 0x230c4cffu, 0x240c4fffu, 0x260c51ffu, 0x280b53ffu, 0x290b55ffu, 0x2b0b57ffu, 0x2d0b59ffu,
        0x2f0a5bffu, 0x310a5cffu, 0x320a5effu, 0x340a5fffu, 0x360961ffu, 0x380962ffu, 0x390963ffu, 0x3b0964ffu,
        0x3d0965ffu, 0x3e0966ffu, 0x400a67ffu, 0x420a68ffu, 0x440a68ffu, 0x450a69ffu, 0x470b6affu, 0x490b6affu,
        0x4a0c6bffu, 0x4c0c6bffu, 0x4d0d6cffu, 0x4f0d6cffu, 0x510e6cffu, 0x520e6dffu, 0x540f6dffu, 0x550f6dffu,
        0x57106effu, 0x59106effu, 0x5a116effu, 0x5c126effu, 0x5d126effu, 0x5f136effu, 0x61136effu, 0x62146effu,
        0x64156effu, 0x65156effu, 0x67166effu, 0x69166effu, 0x6a176effu, 0x6c186effu, 0x6d186effu, 0x6f196effu,
        0x71196effu, 0x721a6effu, 0x741a6effu, 0x751b6effu, 0x771c6dffu, 0x781c6dffu, 0x7a1d6dffu, 0x7c1d6dffu,
        0x7d1e6dffu, 0x7f1e6cffu, 0x801f6cffu, 0x82206cffu, 0x84206bffu, 0x85216bffu, 0x87216bffu, 0x88226affu,
        0x8a226affu, 0x8c2369ffu, 0x8d2369ffu, 0x8f2469ffu, 0x902568ffu, 0x922568ffu, 0x932667ffu, 0x952667ffu,
        0x972766ffu, 0x982766ffu, 0x9a2865ffu, 0x9b2964ffu, 0x9d2964ffu, 0x9f2a63ffu, 0xa02a63ffu, 0xa22b62ffu,
        0xa32c61ffu, 0xa52c60ffu, 0xa62d60ffu, 0xa82e5fffu, 0xa92e5effu, 0xab2f5effu, 0xad305dffu, 0xae305cffu,
        0xb0315bffu, 0xb1325affu, 0xb3325affu, 0xb43359ffu, 0xb63458ffu, 0xb73557ffu, 0xb93556ffu, 0xba3655ffu,
        0xbc3754ffu, 0xbd3853ffu, 0xbf3952ffu, 0xc03a51ffu, 0xc13a50ffu, 0xc33b4fffu, 0xc43c4effu, 0xc63d4dffu,
        0xc73e4cffu, 0xc83f4bffu, 0xca404affu, 0xcb4149ffu, 0xcc4248ffu, 0xce4347ffu, 0xcf4446ffu, 0xd04545ffu,
        0xd24644ffu, 0xd34743ffu, 0xd44842ffu, 0xd54a41ffu, 0xd74b3fffu, 0xd84c3effu, 0xd94d3dffu, 0xda4e3cffu,
        0xdb503bffu, 0xdd513affu, 0xde5238ffu, 0xdf5337ffu, 0xe05536ffu, 0xe15635ffu, 0xe25734ffu, 0xe35933ffu,
        0xe45a31ffu, 0xe55c30ffu, 0xe65d2fffu, 0xe75e2effu, 0xe8602dffu, 0xe9612bffu, 0xea632affu, 0xeb6429ffu,
        0xeb6628ffu, 0xec6726ffu, 0xed6925ffu, 0xee6a24ffu, 0xef6c23ffu, 0xef6e21ffu, 0xf06f20ffu, 0xf1711fffu,
        0xf1731dffu, 0xf2741cffu, 0xf3761bffu, 0xf37819ffu, 0xf47918ffu, 0xf57b17ffu, 0xf57d15ffu, 0xf67e14ffu,
        0xf68013ffu, 0xf78212ffu, 0xf78410ffu, 0xf8850fffu, 0xf8870effu, 0xf8890cffu, 0xf98b0bffu, 0xf98c0affu,
        0xf98e09ffu, 0xfa9008ffu, 0xfa9207ffu, 0xfa9407ffu, 0xfb9606ffu, 0xfb9706ffu, 0xfb9906ffu, 0xfb9b06ffu,
        0xfb9d07ffu, 0xfc9f07ffu, 0xfca108ffu, 0xfca309ffu, 0xfca50affu, 0xfca60cffu, 0xfca80dffu, 0xfcaa0fffu,
        0xfcac11ffu, 0xfcae12ffu, 0xfcb014ffu, 0xfcb216ffu, 0xfcb418ffu, 0xfbb61affu, 0xfbb81dffu, 0xfbba1fffu,
        0xfbbc21ffu, 0xfbbe23ffu, 0xfac026ffu, 0xfac228ffu, 0xfac42affu, 0xfac62dffu, 0xf9c72fffu, 0xf9c932ffu,
        0xf9cb35ffu, 0xf8cd37ffu, 0xf8cf3affu, 0xf7d13dffu, 0xf7d340ffu, 0xf6d543ffu, 0xf6d746ffu, 0xf5d949ffu,
        0xf5db4cffu, 0xf4dd4fffu, 0xf4df53ffu, 0xf4e156ffu, 0xf3e35affu, 0xf3e55dffu, 0xf2e661ffu, 0xf2e865ffu,
        0xf2ea69ffu, 0xf1ec6dffu, 0xf1ed71ffu, 0xf1ef75ffu, 0xf1f179ffu, 0xf2f27dffu, 0xf2f482ffu, 0xf3f586ffu,
        0xf3f68affu, 0xf4f88effu, 0xf5f992ffu, 0xf6fa96ffu, 0xf8fb9affu, 0xf9fc9dffu, 0xfafda1ffu, 0xfcffa4ffu,
    });

    constexpr auto magma = detail::color_interpolator(std::array{
        0x000004ffu, 0x010005ffu, 0x010106ffu, 0x010108ffu, 0x020109ffu, 0x02020bffu, 0x02020dffu, 0x03030fffu,
        0x030312ffu, 0x040414ffu, 0x050416ffu, 0x060518ffu, 0x06051affu, 0x07061cffu, 0x08071effu, 0x090720ffu,
        0x0a0822ffu, 0x0b0924ffu, 0x0c0926ffu, 0x0d0a29ffu, 0x0e0b2bffu, 0x100b2dffu, 0x110c2fffu, 0x120d31ffu,
        0x130d34ffu, 0x140e36ffu, 0x150e38ffu, 0x160f3bffu, 0x180f3dffu, 0x19103fffu, 0x1a1042ffu, 0x1c1044ffu,
        0x1d1147ffu, 0x1e1149ffu, 0x20114bffu, 0x21114effu, 0x221150ffu, 0x241253ffu, 0x251255ffu, 0x271258ffu,
        0x29115affu, 0x2a115cffu, 0x2c115fffu, 0x2d1161ffu, 0x2f1163ffu, 0x311165ffu, 0x331067ffu, 0x341069ffu,
        0x36106bffu, 0x38106cffu, 0x390f6effu, 0x3b0f70ffu, 0x3d0f71ffu, 0x3f0f72ffu, 0x400f74ffu, 0x420f75ffu,
        0x440f76ffu, 0x451077ffu, 0x471078ffu, 0x491078ffu, 0x4a1079ffu, 0x4c117affu, 0x4e117bffu, 0x4f127bffu,
        0x51127cffu, 0x52137cffu, 0x54137dffu, 0x56147dffu, 0x57157effu, 0x59157effu, 0x5a167effu, 0x5c167fffu,
        0x5d177fffu, 0x5f187fffu, 0x601880ffu, 0x621980ffu, 0x641a80ffu, 0x651a80ffu, 0x671b80ffu, 0x681c81ffu,
        0x6a1c81ffu, 0x6b1d81ffu, 0x6d1d81ffu, 0x6e1e81ffu, 0x701f81ffu, 0x721f81ffu, 0x732081ffu, 0x752181ffu,
        0x762181ffu, 0x782281ffu, 0x792282ffu, 0x7b2382ffu, 0x7c2382ffu, 0x7e2482ffu, 0x802582ffu, 0x812581ffu,
        0x832681ffu, 0x842681ffu, 0x862781ffu, 0x882781ffu, 0x892881ffu, 0x8b2981ffu, 0x8c2981ffu, 0x8e2a81ffu,
        0x902a81ffu, 0x912b81ffu, 0x932b80ffu, 0x942c80ffu, 0x962c80ffu, 0x982d80ffu, 0x992d80ffu, 0x9b2e7fffu,
        0x9c2e7fffu, 0x9e2f7fffu, 0xa02f7fffu, 0xa1307effu, 0xa3307effu, 0xa5317effu, 0xa6317dffu, 0xa8327dffu,
        0xaa337dffu, 0xab337cffu, 0xad347cffu, 0xae347bffu, 0xb0357bffu, 0xb2357bffu, 0xb3367affu, 0xb5367affu,
        0xb73779ffu, 0xb83779ffu, 0xba3878ffu, 0xbc3978ffu, 0xbd3977ffu, 0xbf3a77ffu, 0xc03a76ffu, 0xc23b75ffu,
        0xc43c75ffu, 0xc53c74ffu, 0xc73d73ffu, 0xc83e73ffu, 0xca3e72ffu, 0xcc3f71ffu, 0xcd4071ffu, 0xcf4070ffu,
        0xd0416fffu, 0xd2426fffu, 0xd3436effu, 0xd5446dffu, 0xd6456cffu, 0xd8456cffu, 0xd9466bffu, 0xdb476affu,
        0xdc4869ffu, 0xde4968ffu, 0xdf4a68ffu, 0xe04c67ffu, 0xe24d66ffu, 0xe34e65ffu, 0xe44f64ffu, 0xe55064ffu,
        0xe75263ffu, 0xe85362ffu, 0xe95462ffu, 0xea5661ffu, 0xeb5760ffu, 0xec5860ffu, 0xed5a5fffu, 0xee5b5effu,
        0xef5d5effu, 0xf05f5effu, 0xf1605dffu, 0xf2625dffu, 0xf2645cffu, 0xf3655cffu, 0xf4675cffu, 0xf4695cffu,
        0xf56b5cffu, 0xf66c5cffu, 0xf66e5cffu, 0xf7705cffu, 0xf7725cffu, 0xf8745cffu, 0xf8765cffu, 0xf9785dffu,
        0xf9795dffu, 0xf97b5dffu, 0xfa7d5effu, 0xfa7f5effu, 0xfa815fffu, 0xfb835fffu, 0xfb8560ffu, 0xfb8761ffu,
        0xfc8961ffu, 0xfc8a62ffu, 0xfc8c63ffu, 0xfc8e64ffu, 0xfc9065ffu, 0xfd9266ffu, 0xfd9467ffu, 0xfd9668ffu,
        0xfd9869ffu, 0xfd9a6affu, 0xfd9b6bffu, 0xfe9d6cffu, 0xfe9f6dffu, 0xfea16effu, 0xfea36fffu, 0xfea571ffu,
        0xfea772ffu, 0xfea973ffu, 0xfeaa74ffu, 0xfeac76ffu, 0xfeae77ffu, 0xfeb078ffu, 0xfeb27affu, 0xfeb47bffu,
        0xfeb67cffu, 0xfeb77effu, 0xfeb97fffu, 0xfebb81ffu, 0xfebd82ffu, 0xfebf84ffu, 0xfec185ffu, 0xfec287ffu,
        0xfec488ffu, 0xfec68affu, 0xfec88cffu, 0xfeca8dffu, 0xfecc8fffu, 0xfecd90ffu, 0xfecf92ffu, 0xfed194ffu,
        0xfed395ffu, 0xfed597ffu, 0xfed799ffu, 0xfed89affu, 0xfdda9cffu, 0xfddc9effu, 0xfddea0ffu, 0xfde0a1ffu,
        0xfde2a3ffu, 0xfde3a5ffu, 0xfde5a7ffu, 0xfde7a9ffu, 0xfde9aaffu, 0xfdebacffu, 0xfcecaeffu, 0xfceeb0ffu,
        0xfcf0b2ffu, 0xfcf2b4ffu, 0xfcf4b6ffu, 0xfcf6b8ffu, 0xfcf7b9ffu, 0xfcf9bbffu, 0xfcfbbdffu, 0xfcfdbfffu,
    });

    constexpr auto plasma = detail::color_interpolator(std::array{
        0x0d0887ffu, 0x100788ffu, 0x130789ffu, 0x16078affu, 0x19068cffu, 0x1b068dffu, 0x1d068effu, 0x20068fffu,
        0x220690ffu, 0x240691ffu, 0x260591ffu, 0x280592ffu, 0x2a0593ffu, 0x2c0594ffu, 0x2e0595ffu, 0x2f0596ffu,
        0x310597ffu, 0x330597ffu, 0x350498ffu, 0x370499ffu, 0x38049affu, 0x3a049affu, 0x3c049bffu, 0x3e049cffu,
        0x3f049cffu, 0x41049dffu, 0x43039effu, 0x44039effu, 0x46039fffu, 0x48039fffu, 0x4903a0ffu, 0x4b03a1ffu,
        0x4c02a1ffu, 0x4e02a2ffu, 0x5002a2ffu, 0x5102a3ffu, 0x5302a3ffu, 0x5502a4ffu, 0x5601a4ffu, 0x5801a4ffu,
        0x5901a5ffu, 0x5b01a5ffu, 0x5c01a6ffu, 0x5e01a6ffu, 0x6001a6ffu, 0x6100a7ffu, 0x6300a7ffu, 0x6400a7ffu,
        0x6600a7ffu, 0x6700a8ffu, 0x6900a8ffu, 0x6a00a8ffu, 0x6c00a8ffu, 0x6e00a8ffu, 0x6f00a8ffu, 0x7100a8ffu,
        0x7201a8ffu, 0x7401a8ffu, 0x7501a8ffu, 0x7701a8ffu, 0x7801a8ffu, 0x7a02a8ffu, 0x7b02a8ffu, 0x7d03a8ffu,
        0x7e03a8ffu, 0x8004a8ffu, 0x8104a7ffu, 0x8305a7ffu, 0x8405a7ffu, 0x8606a6ffu, 0x8707a6ffu, 0x8808a6ffu,
        0x8a09a5ffu, 0x8b0aa5ffu, 0x8d0ba5ffu, 0x8e0ca4ffu, 0x8f0da4ffu, 0x910ea3ffu, 0x920fa3ffu, 0x9410a2ffu,
        0x9511a1ffu, 0x9613a1ffu, 0x9814a0ffu, 0x99159fffu, 0x9a169fffu, 0x9c179effu, 0x9d189dffu, 0x9e199dffu,
        0xa01a9cffu, 0xa11b9bffu, 0xa21d9affu, 0xa31e9affu, 0xa51f99ffu, 0xa62098ffu, 0xa72197ffu, 0xa82296ffu,
        0xaa2395ffu, 0xab2494ffu, 0xac2694ffu, 0xad2793ffu, 0xae2892ffu, 0xb02991ffu, 0xb12a90ffu, 0xb22b8fffu,
        0xb32c8effu, 0xb42e8dffu, 0xb52f8cffu, 0xb6308bffu, 0xb7318affu, 0xb83289ffu, 0xba3388ffu, 0xbb3488ffu,
        0xbc3587ffu, 0xbd3786ffu, 0xbe3885ffu, 0xbf3984ffu, 0xc03a83ffu, 0xc13b82ffu, 0xc23c81ffu, 0xc33d80ffu,
        0xc43e7fffu, 0xc5407effu, 0xc6417dffu, 0xc7427cffu, 0xc8437bffu, 0xc9447affu, 0xca457affu, 0xcb4679ffu,
        0xcc4778ffu, 0xcc4977ffu, 0xcd4a76ffu, 0xce4b75ffu, 0xcf4c74ffu, 0xd04d73ffu, 0xd14e72ffu, 0xd24f71ffu,
        0xd35171ffu, 0xd45270ffu, 0xd5536fffu, 0xd5546effu, 0xd6556dffu, 0xd7566cffu, 0xd8576bffu, 0xd9586affu,
        0xda5a6affu, 0xda5b69ffu, 0xdb5c68ffu, 0xdc5d67ffu, 0xdd5e66ffu, 0xde5f65ffu, 0xde6164ffu, 0xdf6263ffu,
        0xe06363ffu, 0xe16462ffu, 0xe26561ffu, 0xe26660ffu, 0xe3685fffu, 0xe4695effu, 0xe56a5dffu, 0xe56b5dffu,
        0xe66c5cffu, 0xe76e5bffu, 0xe76f5affu, 0xe87059ffu, 0xe97158ffu, 0xe97257ffu, 0xea7457ffu, 0xeb7556ffu,
        0xeb7655ffu, 0xec7754ffu, 0xed7953ffu, 0xed7a52ffu, 0xee7b51ffu, 0xef7c51ffu, 0xef7e50ffu, 0xf07f4fffu,
        0xf0804effu, 0xf1814dffu, 0xf1834cffu, 0xf2844bffu, 0xf3854bffu, 0xf3874affu, 0xf48849ffu, 0xf48948ffu,
        0xf58b47ffu, 0xf58c46ffu, 0xf68d45ffu, 0xf68f44ffu, 0xf79044ffu, 0xf79143ffu, 0xf79342ffu, 0xf89441ffu,
        0xf89540ffu, 0xf9973fffu, 0xf9983effu, 0xf99a3effu, 0xfa9b3dffu, 0xfa9c3cffu, 0xfa9e3bffu, 0xfb9f3affu,
        0xfba139ffu, 0xfba238ffu, 0xfca338ffu, 0xfca537ffu, 0xfca636ffu, 0xfca835ffu, 0xfca934ffu, 0xfdab33ffu,
        0xfdac33ffu, 0xfdae32ffu, 0xfdaf31ffu, 0xfdb130ffu, 0xfdb22fffu, 0xfdb42fffu, 0xfdb52effu, 0xfeb72dffu,
        0xfeb82cffu, 0xfeba2cffu, 0xfebb2bffu, 0xfebd2affu, 0xfebe2affu, 0xfec029ffu, 0xfdc229ffu, 0xfdc328ffu,
        0xfdc527ffu, 0xfdc627ffu, 0xfdc827ffu, 0xfdca26ffu, 0xfdcb26ffu, 0xfccd25ffu, 0xfcce25ffu, 0xfcd025ffu,
        0xfcd225ffu, 0xfbd324ffu, 0xfbd524ffu, 0xfbd724ffu, 0xfad824ffu, 0xfada24ffu, 0xf9dc24ffu, 0xf9dd25ffu,
        0xf8df25ffu, 0xf8e125ffu, 0xf7e225ffu, 0xf7e425ffu, 0xf6e626ffu, 0xf6e826ffu, 0xf5e926ffu, 0xf5eb27ffu,
        0xf4ed27ffu, 0xf3ee27ffu, 0xf3f027ffu, 0xf2f227ffu, 0xf1f426ffu, 0xf1f525ffu, 0xf0f724ffu, 0xf0f921ffu,
    });
}